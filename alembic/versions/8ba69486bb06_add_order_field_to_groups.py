"""Add order field to groups

Revision ID: 8ba69486bb06
Revises: 
Create Date: 2025-03-22 13:17:27.316425

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ba69486bb06'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_group_id', table_name='group')
    op.drop_index('ix_group_name', table_name='group')
    op.drop_table('group')
    op.add_column('groups', sa.Column('order', sa.Integer(), nullable=True))
    op.alter_column('groups', 'node_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('groups', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=False)
    op.drop_constraint('groups_node_id_fkey', 'groups', type_='foreignkey')
    op.create_foreign_key(None, 'groups', 'nodes', ['node_id'], ['id'])
    op.create_index(op.f('ix_measuring_instruments_id'), 'measuring_instruments', ['id'], unique=False)
    op.create_index(op.f('ix_measuring_instruments_vri_id'), 'measuring_instruments', ['vri_id'], unique=False)
    op.create_unique_constraint('uix_mit_mi', 'measuring_instruments', ['mit_number', 'mi_number'])
    op.drop_constraint('measuring_instruments_group_id_fkey', 'measuring_instruments', type_='foreignkey')
    op.drop_constraint('measuring_instruments_node_id_fkey', 'measuring_instruments', type_='foreignkey')
    op.create_foreign_key(None, 'measuring_instruments', 'groups', ['group_id'], ['id'])
    op.create_foreign_key(None, 'measuring_instruments', 'nodes', ['node_id'], ['id'])
    op.drop_column('measuring_instruments', 'index_within_group')
    op.alter_column('nodes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('nodes', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_index(op.f('ix_nodes_name'), 'nodes', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nodes_name'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.alter_column('nodes', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('nodes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('measuring_instruments', sa.Column('index_within_group', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'measuring_instruments', type_='foreignkey')
    op.drop_constraint(None, 'measuring_instruments', type_='foreignkey')
    op.create_foreign_key('measuring_instruments_node_id_fkey', 'measuring_instruments', 'nodes', ['node_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('measuring_instruments_group_id_fkey', 'measuring_instruments', 'groups', ['group_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('uix_mit_mi', 'measuring_instruments', type_='unique')
    op.drop_index(op.f('ix_measuring_instruments_vri_id'), table_name='measuring_instruments')
    op.drop_index(op.f('ix_measuring_instruments_id'), table_name='measuring_instruments')
    op.drop_constraint(None, 'groups', type_='foreignkey')
    op.create_foreign_key('groups_node_id_fkey', 'groups', 'nodes', ['node_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.alter_column('groups', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('groups', 'node_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('groups', 'order')
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('node_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name='group_node_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='group_pkey')
    )
    op.create_index('ix_group_name', 'group', ['name'], unique=False)
    op.create_index('ix_group_id', 'group', ['id'], unique=False)
    # ### end Alembic commands ###
